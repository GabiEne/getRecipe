<?php
 $title = 'NearBy Pharmacies';
 $this->headTitle($title);
 ?>
 <body class = "admin-page">
 <div class="page-header" role="navigation">
 <h1><?php echo $this->escapeHtml($title); ?></h1>
 </div>

 <table class="display" id="example">
 
 <thead> 
 <tr>
     <th>Name</th>
     <th>Address</th>
	 <th>Website</th>
	 
	
 </tr>
 </thead>
 <tbody>

 <?php foreach ($pharmacies as $pharmacy) : ?>
 <tr>
     <td><?php echo $this->escapeHtml($pharmacy->name);?> </td>
     <td><?php echo $this->escapeHtml($pharmacy->address);?></td>
	 <td><?php echo $this->escapeHtml($pharmacy->website);?></td>
	  
        
	
        
      
 </tr>

 <?php endforeach; ?>
  </tbody>
 </table>
 </body>
 <script src="https://maps.googleapis.com/maps/api/js?v=3.exp/AIzaSyDtxyFEN3DxkVQrbbpMyilWZWsy6dH39ac&signed_in=true&libraries=places"></script>
       
   <script>
  function initialize() {
     var mapOptions = {
      center: new google.maps.LatLng(-33.8688, 151.2195),
      zoom: 13
  };
  var map = new google.maps.Map(document.getElementById('map-canvas'),
    mapOptions);

  
 
  

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  google.maps.event.addListener(autocomplete, 'place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35),
      draggable:true
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);
    marker.setDraggable(true);
   

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
    var address = document.getElementById("address").value;
    geocoder = new google.maps.Geocoder();
    geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          map.setCenter(results[0].geometry.location);
          document.getElementById('Longitude').value = place.geometry.location.lng();        
          document.getElementById('Latitude').value = place.geometry.location.lat(); 
 	   } else {
                   alert("Geocode was not successful for the following reason: " + status );
                 }
               });
  });

 
}

google.maps.event.addDomListener(window, 'load', initialize);

    </script>